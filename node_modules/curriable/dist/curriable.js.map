{"version":3,"file":"curriable.js","sources":["../src/utils.ts","../src/index.ts"],"sourcesContent":["/**\n * @constant __ placeholder used when parameters are skipped\n */\nexport const __: Placeholder =\n  typeof Symbol === 'function' ? Symbol('curriable placeholder') : 0xedd1;\n\n/**\n * @function recursiveCurry\n *\n * @description\n * recursively curry over the arguments until all have been resolved\n *\n * @param fn the function to curry\n * @param arity the length of the function to curry until\n * @param args the existing arguments\n * @returns the result of the function call\n */\nexport const recursiveCurry: Function = (\n  fn: Function,\n  arity: number,\n  args: any[],\n): Function =>\n  function () {\n    const length: number = args.length;\n\n    const newArgs: IArguments = arguments;\n    const newArgsLength: number = newArgs.length;\n\n    const combined: any[] = [];\n\n    let newArgsIndex: number = 0;\n    let remaining: number = arity;\n    let value: any;\n\n    if (length) {\n      for (let index: number = 0; index < length; index++) {\n        combined[index] = value =\n          args[index] === __ && newArgsIndex < newArgsLength\n            ? newArgs[newArgsIndex++]\n            : args[index];\n\n        if (value !== __) {\n          --remaining;\n        }\n      }\n    }\n\n    if (newArgsIndex < newArgsLength) {\n      for (; newArgsIndex < newArgsLength; newArgsIndex++) {\n        combined[combined.length] = value = newArgs[newArgsIndex];\n\n        if (value !== __ && newArgsIndex < arity) {\n          --remaining;\n        }\n      }\n    }\n\n    return remaining > 0\n      ? recursiveCurry(fn, arity, combined)\n      : fn.apply(this, combined);\n  };\n","// utils\nimport { __, recursiveCurry } from './utils';\n\nexport { __ };\n\n/**\n * @function curry\n *\n * @description\n * get the method passed as a curriable method based on its parameters\n *\n * @param fn the method to make curriable\n * @param arity the arity of the curried method\n * @returns the fn passed as a curried function\n */\nexport const curry = (\n  fn: Function,\n  arity: number = fn.length,\n): CurriedFunction => {\n  const curried = recursiveCurry(fn, arity, []);\n\n  curried.arity = arity;\n  curried.fn = fn;\n\n  return curried;\n};\n\ncurry.__ = __;\n\n/**\n * @function uncurry\n *\n * @description\n * return a function that is the non-curried version of the fn passed\n *\n * @param curried the curried function to uncurry\n * @returns the original fn\n */\nexport const uncurry = (curried: CurriedFunction): Function => curried.fn;\n\ncurry.uncurry = uncurry;\n\nexport default curry;\n"],"names":[],"mappings":";;;;;;EAAA;;;AAGA,MAAa,EAAE,GACb,OAAO,MAAM,KAAK,UAAU,GAAG,MAAM,CAAC,uBAAuB,CAAC,GAAG,MAAM,CAAC;EAE1E;;;;;;;;;;;AAWA,EAAO,IAAM,cAAc,GAAa,UACtC,EAAY,EACZ,KAAa,EACb,IAAW;MAEX,OAAA;UACE,IAAM,MAAM,GAAW,IAAI,CAAC,MAAM,CAAC;UAEnC,IAAM,OAAO,GAAe,SAAS,CAAC;UACtC,IAAM,aAAa,GAAW,OAAO,CAAC,MAAM,CAAC;UAE7C,IAAM,QAAQ,GAAU,EAAE,CAAC;UAE3B,IAAI,YAAY,GAAW,CAAC,CAAC;UAC7B,IAAI,SAAS,GAAW,KAAK,CAAC;UAC9B,IAAI,KAAU,CAAC;UAEf,IAAI,MAAM,EAAE;cACV,KAAK,IAAI,KAAK,GAAW,CAAC,EAAE,KAAK,GAAG,MAAM,EAAE,KAAK,EAAE,EAAE;kBACnD,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK;sBACrB,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,YAAY,GAAG,aAAa;4BAC9C,OAAO,CAAC,YAAY,EAAE,CAAC;4BACvB,IAAI,CAAC,KAAK,CAAC,CAAC;kBAElB,IAAI,KAAK,KAAK,EAAE,EAAE;sBAChB,EAAE,SAAS,CAAC;mBACb;eACF;WACF;UAED,IAAI,YAAY,GAAG,aAAa,EAAE;cAChC,OAAO,YAAY,GAAG,aAAa,EAAE,YAAY,EAAE,EAAE;kBACnD,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,KAAK,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;kBAE1D,IAAI,KAAK,KAAK,EAAE,IAAI,YAAY,GAAG,KAAK,EAAE;sBACxC,EAAE,SAAS,CAAC;mBACb;eACF;WACF;UAED,OAAO,SAAS,GAAG,CAAC;gBAChB,cAAc,CAAC,EAAE,EAAE,KAAK,EAAE,QAAQ,CAAC;gBACnC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;OAC9B;EAtCD,CAsCC,CAAC;;EC5DJ;AACA,EAIA;;;;;;;;;;AAUA,MAAa,KAAK,GAAG,UACnB,EAAY,EACZ,KAAyB;MAAzB,sBAAA,EAAA,QAAgB,EAAE,CAAC,MAAM;MAEzB,IAAM,OAAO,GAAG,cAAc,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;MAE9C,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;MACtB,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC;MAEhB,OAAO,OAAO,CAAC;EACjB,CAAC,CAAC;EAEF,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC;EAEd;;;;;;;;;AASA,MAAa,OAAO,GAAG,UAAC,OAAwB,IAAe,OAAA,OAAO,CAAC,EAAE,GAAA,CAAC;EAE1E,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;;;;;;;;;;;;;;;"}